import { readFileSync, writeFileSync } from "fs";
import path from "path";

/**
 * This file contains a script that does the following
 * - Automatically find & parse all options for au-date-range-picker
 * - Put all of that info into a markdown table
 * - Insert it into README.md, replacing any content previously generated by this script 
 * 
 * 
 * This script uses different regexes to be able to find options, groups,
 * and where to put the generated info into the README.md
 * Thus, if the source data structure changes, make sure to adapt these regexes too
 * 
 */

/**
 * Appends a table string to the output variable, based on the jsContents & optionRegex
 */
function addTableStringToOutput() {
    const match = optionRegex.exec(jsContents);
    if (match) {
        const groups = match.groups;

        // If a new group, make a new table
        if (groups.group != undefined) {
            output += `\n\n#### ${groups.group}\n`
            output += headerTemplate;
        }
        // Else, add a row
        else {
            let { name, defaultvalue, description, ...rest } = groups;
            if (description == undefined) description = "";
            output += `| @${name} | \`${defaultvalue}\` | ${description} |\n`;
        }
        addTableStringToOutput()
    }
}

/**
 * Replaces a specified string/regex in a file
 * 
 * @param path      File to be read & written to 
 * @param target    What has to be replaced. Can be a string or regex
 * @param value     What to replace the target with
 */
function replaceInFile(path, target, value) {
    let contents = readFileSync(path, {encoding: "utf-8"});
    contents = contents.replace(target, value);
    writeFileSync(path, contents, {encoding: "utf-8"})
}

const headerTemplate = `
| Name     | Default value | Description |
| -------- | ------------- | ----------- |\n`;
const optionRegex = RegExp(/((\/\/ Options: (?<group>.+))|@tracked (?<name>.+) =.+?\|{1,} (?<defaultvalue>.+);(?: +\/\/ (?<description>.+))?)/gmi);

// Paths to files
const basePath = path.join(import.meta.url.replace("file://", ""), "..", "..");
const dateRangePickerPath = path.join(basePath, "addon/components/date-range-picker.js");
const appendixPath = path.join(basePath, "utils/docs-appendix.md");
const readmePath = path.join(basePath, "README.md");


let jsContents = readFileSync(dateRangePickerPath, {encoding: "utf-8"});

let output = "The following options can be passed to `<AuDateRangePicker>`:\n";
addTableStringToOutput();
output += "\n\n"
output += readFileSync(appendixPath, {encoding: "utf-8"});
output += "\n\n";


replaceInFile(
    readmePath, 
    /(!?### Configuration\n).+?(!?^### )/ms, 
    "### Configuration\n" + output + "### ");
// The negative lookahead doesn't seem to work properly here, so add what has been removed




